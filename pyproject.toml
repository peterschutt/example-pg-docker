[tool.isort]
profile = "black"
overwrite_in_place = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover',
    "if __name__ == '__main__':",
]

[tool.coverage.run]
omit = [
    "tests/*",
    "src/app/utils/restartable_worker.py",
    "src/app/utils/redis_ready.py",
    "src/app/utils/postgres_ready.py",
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
addopts = "--cov=app -v --doctest-modules --doctest-glob=*.md"
markers = [
    "no_auto_patch_user",
]

[tool.poetry]
name = "starlite-pg-redis-docker"
version = "0.1.0"
description = "An example Starlite stack with Redis, Postgres and Docker"
authors = ["yudjinn <yudjinncoding@gmail.com>", "Peter Schutt <peter.github@proton.me>"]
packages = [
    { include = "app", from = "src" },
]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
alembic = "^1.7"
asyncpg = "^0.25"
sqlalchemy = "^1.4"
starlite = { git = "https://github.com/peterschutt/starlite.git", branch = "exclude-by-name" }
uvicorn = {extras = ["standard"], version = "^0.17"}
gunicorn = "^20.1"
passlib = "^1.7"
redis = "^4.3"
pydantic = "^1.9"

[tool.poetry.dev-dependencies]
black = "*"
coverage = {extras = ["toml"], version = "*"}
flake8 = "*"
isort = "*"
mypy = "*"
pytest = "*"
pytest-cov = "*"
sqlalchemy2-stubs = "*"
types-passlib = "*"
types-requests = "*"
types-redis = "*"

[tool.poetry.scripts]
pg-ready = "app.utils.postgres_ready:main"
redis-ready = "app.utils.redis_ready:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
